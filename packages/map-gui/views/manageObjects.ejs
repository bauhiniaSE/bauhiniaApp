<!DOCTYPE HTML>
<html>

<head>
  <style>
    @import url(https://fonts.googleapis.com/css?family=Roboto:300);

    .grid-container {
      overflow: scroll;
      height: 375px;
      width: auto;
      overflow-x: hidden;
      display: grid;
      column-count: 10;
      grid-template-columns:
        75px 75px 75px 75px 75px 75px 75px 75px 75px 75px 75px 75px 75px 75px 75px;
      grid-template-rows:
        75px 75px 75px 75px 75px;
      grid-gap: none;
    }

    .grid-container>div {
      background-color: rgba(255, 255, 255, 0.8);
      text-align: center;

      border: 1px solid black;
      font-size: 20px;
    }

    img {
      height: 70px;
      width: 70px;
    }

    .flex {
      display: flex;
      justify-content: center;
    }

    .flex-item+.flex-item {
      margin-left: 10px;
    }

    button,
    input[type=button] {
      font-family: "Roboto", sans-serif;
      background: #fdfffb;
      box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
      margin-bottom: 50px;
      margin-left: 10px;
      margin-right: 10px;
      color: #24616b;
      padding: 25px;
      font-size: 25px;
      border: none;
      cursor: pointer;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      width: 250px;
    }

    button:hover,
    input[type=button]:hover {
      background-color: #a4ccb9;
      color: #133f46;
    }

    .flex {
      display: flex;
      justify-content: center;
    }

    .flex-item+.flex-item {
      margin-left: 10px;
    }

    body {
      background-image: -webkit-linear-gradient(0deg, #045714, #24616b);
      font-family: "Roboto", sans-serif;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    /* The Modal (background) */
    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.6);
      justify-content: center;
      align-items: center;
    }

    /* Modal Content */
    .modal-content {
      font-size: 24px;
      background: #f5ffe9;
      box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
      padding: 20px;
      border: 1px solid #888;
      width: 60%;
    }

    /* The Close Button */
    .close {
      color: #aaaaaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: #000;
      text-decoration: none;
      cursor: pointer;
    }

    input[type=text],
    input[type=number] {
      font-family: "Roboto", sans-serif;
      outline: 0;
      background: #fdfffb;
      width: 100%;
      border: 0;
      box-shadow: 0 0 10px 0 #a4ccb9, 0 3px 3px 0 #24616b;
      margin: 0 0 15px;
      padding: 10px;
      box-sizing: border-box;
      font-size: 16px;
    }

    .popup input[type=submit] {
      font-family: "Roboto", sans-serif;
      text-transform: uppercase;
      outline: 0;
      background: #24616b;
      width: 20%;
      border: 0;
      padding: 5px;
      color: #ffffff;
      font-size: 14px;
      -webkit-transition: all 0.3 ease;
      transition: all 0.3 ease;
      cursor: pointer;
      float: right;
    }

    .popup input[type=submit]:hover,
    .popup input[type=submit]:active,
    .popup input[type=submit]:focus {
      background: #a4ccb9;
      color: #000000;
    }

    #editorHandle {
      display: flex;
      flex-direction: column;
    }

    .selected {
      border-color: red !important;
    }
  </style>

</head>

<body>
  <div>
    <div class="flex">
      
        <div>
          <button id="add_btn">Add object</button>
          <button id="edit_btn">Edit object</button>
          <button id="remove_btn">Remove object</button>
          <form>
            <button formaction="/maps">Back</button>
            <button formaction="/">Exit</button>
          </form>
        </div>
    </div>
    <div class="flex">
      <div class="grid-container"></div>
    </div>
  </div>

  <!-- The Modal -->
  <div id="myModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
      <span class="close">&times;</span>
      <div class="popup"></div>
    </div>
  </div>

  <script src="/map-builder/map-builder.js"></script>
  <script src="/map-manager/map-manager.js"></script>
  <script>
    const container = document.getElementsByClassName('grid-container')[0];
    const modal = document.getElementById("myModal");
    const add_btn = document.getElementById("add_btn");
    const edit_btn = document.getElementById("edit_btn");
    const remove_btn = document.getElementById("remove_btn");
    const span = document.getElementsByClassName("close")[0];

    const objectEditor = new ObjectEditor(document.getElementsByClassName('popup')[0]);

    let colouredBox = null;

    Manager.getAllTiles().then(tiles => {
      tiles.forEach(tile => {
        const box = document.createElement('div');
        const img = document.createElement('img');

        img.src = tile.image;
        img.id = tile.id;
        box.onclick = () => {
          if (colouredBox !== null) {
            colouredBox.className = '';
          }
          objectEditor.selectedTile = tile.id;
          box.className = 'selected';
        }

        box.appendChild(img);
        container.appendChild(box);
      });
    });

    // When the user clicks the button, open the modal 
    add_btn.onclick = () => {
      modal.style.display = "flex";
      objectEditor.newTile();
    }
    edit_btn.onclick = () => {
      modal.style.display = "flex";
      objectEditor.editTile();
    }
    remove_btn.onclick = () => {
      objectEditor.removeTile();
    }
    // When the user clicks on <span> (x), close the modal
    span.onclick = () => {
      modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = (event) => {
      if (event.target === modal) {
        modal.style.display = "none";
      }
    }
  </script>
</body>

</html>